<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[React Native 开发环境搭建]]></title>
      <url>/2017/11/05/React%20Native%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/281665-226ddf6afab5f41b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="React Native"></p>
<h2 id="什么是-React-Native"><a href="#什么是-React-Native" class="headerlink" title="什么是 React Native"></a>什么是 React Native</h2><blockquote>
<p>React Native (简称 RN)是 Facebook 于 2015 年开源的一套跨平台，动态更新的 JavaScript 框架。<br>口号是：Learn once, write anywhere: Build mobile apps with React<br>着力于提高多平台开发的开发效率 —— 仅需学习一次，编写任何平台。</p>
</blockquote>
 <a id="more"></a>
<h2 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h2><p>我用的电脑是 MacBook,搭建的环境是 MacOS + Android 。<br>其他例如搭建 iOS, Windows, Linux 的环境，请参考 <a href="http://reactnative.cn/docs/0.49/getting-started.html#content" target="_blank" rel="external">React Native 中文网的搭建开发环境</a> , <a href="http://facebook.github.io/react-native/docs/getting-started.html" target="_blank" rel="external">React Native 官方的 Getting Started</a> 这两篇文章。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装必须的软件"><a href="#安装必须的软件" class="headerlink" title="安装必须的软件"></a>安装必须的软件</h4><blockquote>
<p>需要安装 Node.js , Watchman, React Native命令行界面, JDK 和 Android Studio</p>
</blockquote>
<h5 id="HomeBrew"><a href="#HomeBrew" class="headerlink" title="HomeBrew"></a>HomeBrew</h5><p><a href="https://brew.sh/" target="_blank" rel="external">Homebrew</a>, Mac 系统的包管理器，用于安装 NodeJS 和其他一些必需的工具软件</p>
<blockquote>
<p>/usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install" target="_blank" rel="external">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</p>
</blockquote>
<p>直接复制上述命令，在终端运行就可以了。<br>译注：在Max OS X 10.11（El Capitan)版本中，homebrew在安装软件时可能会碰到/usr/local目录不可写的权限问题。可以使用下面的命令修复：</p>
<blockquote>
<p>sudo chown -R `whoami` /usr/local</p>
</blockquote>
<h5 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h5><p>使用 HomeBrew 来安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p>
<blockquote>
<p>brew install node</p>
</blockquote>
<p>安装完 node 后建议设置 npm 镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用 cnpm！cnpm 安装的模块路径比较奇怪，packager不能正常识别！</p>
<blockquote>
<p>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> –global<br>npm config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="external">https://npm.taobao.org/dist</a> –global</p>
</blockquote>
<h5 id="Yarn、React-Native的命令行工具（react-native-cli）"><a href="#Yarn、React-Native的命令行工具（react-native-cli）" class="headerlink" title="Yarn、React Native的命令行工具（react-native-cli）"></a>Yarn、React Native的命令行工具（react-native-cli）</h5><p><a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="external">Yarn</a> 是 Facebook 提供的替代 npm 的工具，可以加速 node 模块的下载。React Native 的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>
<blockquote>
<p>npm install -g yarn react-native-cli</p>
</blockquote>
<p>安装完 yarn 后也要设置镜像源:</p>
<blockquote>
<p>yarn config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> –global<br>yarn config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="external">https://npm.taobao.org/dist</a> –global</p>
</blockquote>
<p>如果你看到 <strong><code>EACCES: permission denied</code></strong> 这样的权限报错，那么请参照上文的 homebrew 译注，修复 <code>/usr/local</code> 目录的所有权：</p>
<blockquote>
<p>sudo chown -R `whoami` /usr/local</p>
</blockquote>
<p>安装完yarn之后就可以用 <code>yarn</code> 代替 <code>npm</code> 了，例如用 <code>yarn</code> 代替 <code>npm install</code> 命令，用 <code>yarn add</code> 某第三方库名代替 <code>npm install --save</code> 某第三方库名。 </p>
<h5 id="Java-开发工具包"><a href="#Java-开发工具包" class="headerlink" title="Java 开发工具包"></a>Java 开发工具包</h5><p>React Native需要最新版本的Java SE开发工具包（JDK）。如果需要，<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">下载并安装JDK 8或更高版本</a>。</p>
<h5 id="Android-开发环境"><a href="#Android-开发环境" class="headerlink" title="Android 开发环境"></a>Android 开发环境</h5><h6 id="1-安装-Android-Studio"><a href="#1-安装-Android-Studio" class="headerlink" title="1. 安装 Android Studio"></a>1. 安装 Android Studio</h6><p>下载并安装Android Studio 。如果可以科学上网，可以在<a href="https://developer.android.google.cn/index.html" target="_blank" rel="external">Android Developers</a> 下载，也可以在 <a href="http://www.android-studio.org/" target="_blank" rel="external">Android Studio 中文社区</a> 进行下载。<br>Android Studio包含了运行和测试React Native应用所需的Android SDK和模拟器。</p>
<blockquote>
<p>除非特别注明，请不要改动安装过程中的选项。比如Android Studio默认安装了 Android Support Repository，而这也是React Native必须的（否则在react-native run-android时会报appcompat-v7包找不到的错误）。</p>
</blockquote>
<p>安装过程中需要改动的选项:</p>
<ul>
<li>选择 <code>Custom</code> 选项:<br>  <img src="http://reactnative.cn/static/docs/0.49/img/react-native-android-studio-custom-install.png" alt="选择 Custom"></li>
<li>勾选 <code>Performance</code> 和 <code>Android Virtual Device</code><br>  <img src="http://reactnative.cn/static/docs/0.49/img/react-native-android-studio-additional-installs.png" alt="选择"></li>
<li>安装完成后，在 Android Studio 的启动欢迎界面中选择 <strong>Configure | SDK Manager</strong>。<br>  <img src="http://reactnative.cn/static/docs/0.49/img/react-native-android-studio-configure-sdk.png" alt="选择 SDK Manager"></li>
<li>在 <code>SDK Platforms</code> 窗口中，选择 <code>Show Package Details</code>，然后在Android 6.0 (Marshmallow)中勾选<ul>
<li><strong>Google APIs</strong></li>
<li><strong>Android SDK Platform 23</strong></li>
<li><strong>Intel x86 Atom_64 System Image</strong></li>
<li><strong>Google APIs Intel x86 Atom_64 System Image</strong><br><img src="http://reactnative.cn/static/docs/0.49/img/react-native-android-studio-android-sdk-platforms.png" alt="勾选指定项"></li>
</ul>
</li>
<li>在 <strong>SDK Tools</strong> 窗口中，选择 Show Package Details，然后在 Android SDK Build Tools 中勾选 <strong>Android SDK Build-Tools 23.0.1（必须是这个版本）</strong>。然后还要勾选最底部的 <strong>Android Support Repository</strong>.<br>  <img src="http://reactnative.cn/static/docs/0.49/img/react-native-android-studio-android-sdk-build-tools.png" alt="勾选 SDK Tools"></li>
</ul>
<h6 id="2-ANDROID-HOME-环境变量"><a href="#2-ANDROID-HOME-环境变量" class="headerlink" title="2. ANDROID_HOME 环境变量"></a>2. ANDROID_HOME 环境变量</h6><p>确保 <strong>ANDROID_HOME</strong> 环境变量正确地指向了你安装的 Android SDK 的路径。具体的做法是把下面的命令加入到 <code>~/.bash_profile</code> 文件中：(<strong>译注</strong>：~ 表示用户目录，即<code>/Users/你的用户名/</code>，而小数点开头的文件在 Finder 中是隐藏的，并且这个文件有可能并不存在。请在终端下使用 <code>vi ~/.bash_profile</code> 命令创建或编辑。如不熟悉 vi 操作，请点击<a href="http://www.eepw.com.cn/article/48018.htm" target="_blank" rel="external">这里</a> 学习）。如果你的命令行不是bash，而是例如 zsh 等其他，请使用对应的配置文件。</p>
<blockquote>
<p>如果你不是通过Android Studio安装的sdk，则其路径可能不同，请自行确定清楚。<br>export ANDROID_HOME=~/Library/Android/sdk</p>
</blockquote>
<p>然后使用下列命令使其立即生效（否则重启后才生效）：</p>
<blockquote>
<p>source ~/.bash_profile</p>
</blockquote>
<p>可以使用 <strong><code>echo $ANDROID_HOME</code></strong> 检查此变量是否已正确设置。</p>
<h5 id="Watchman"><a href="#Watchman" class="headerlink" title="Watchman"></a>Watchman</h5><p><a href="https://facebook.github.io/watchman/docs/install.html" target="_blank" rel="external">Watchman</a>是由 Facebook 提供的监视文件系统变更的工具。安装此工具可以提高开发时的性能（packager可以快速捕捉文件的变化从而实现实时刷新）。</p>
<blockquote>
<p>brew install watchman</p>
</blockquote>
<h5 id="将Android-SDK的Tools目录添加到PATH变量中"><a href="#将Android-SDK的Tools目录添加到PATH变量中" class="headerlink" title="将Android SDK的Tools目录添加到PATH变量中"></a>将Android SDK的Tools目录添加到PATH变量中</h5><p>把 Android SDK 的 tools 和 platform-tools 目录添加到 <strong>PATH</strong> 变量中，以便在终端中运行一些 Android 工具，例如 <code>android avd</code> 或是 <code>adb logcat</code> 等。具体做法仍然是在 <code>~/.bash_profile</code> 中添加：</p>
<blockquote>
<p>export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools</p>
</blockquote>
<h4 id="其他可选的安装项"><a href="#其他可选的安装项" class="headerlink" title="其他可选的安装项"></a>其他可选的安装项</h4><h5 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h5><p>Git 版本控制。如若没有，则使用下列命令安装：</p>
<blockquote>
<p>brew install git</p>
</blockquote>
<h5 id="Nuclide"><a href="#Nuclide" class="headerlink" title="Nuclide"></a>Nuclide</h5><p><a href="https://nuclide.io/" target="_blank" rel="external">Nuclide</a> （此链接需要科学上网）是由 Facebook 提供的基于 <strong>atom</strong> 的集成开发环境，可用于编写、<a href="http://nuclide.io/docs/platforms/react-native/#running-applications" target="_blank" rel="external">运行</a>和 <a href="https://nuclide.io/docs/platforms/react-native/#debugging" target="_blank" rel="external">调试</a>React Native应用。</p>
<p>点击这里阅读<a href="http://nuclide.io/docs/quick-start/getting-started/" target="_blank" rel="external">Nuclide的入门文档</a>。</p>
<h5 id="Genymotion"><a href="#Genymotion" class="headerlink" title="Genymotion"></a>Genymotion</h5><p>Genymotion是一个性能更好的选择，但它只对个人用户免费。</p>
<ol>
<li>下载和安装<a href="https://www.genymotion.com/download" target="_blank" rel="external">Genymotion</a>（genymotion需要依赖VirtualBox虚拟机，下载选项中提供了包含VirtualBox和不包含的选项，请按需选择）。</li>
<li>打开Genymotion。如果你还没有安装VirtualBox，则此时会提示你安装。</li>
<li>创建一个新模拟器并启动。</li>
<li>启动React Native应用后，可以按下⌘+M来打开开发者菜单</li>
</ol>
<h5 id="Gradle-Daemon"><a href="#Gradle-Daemon" class="headerlink" title="Gradle Daemon"></a>Gradle Daemon</h5><p>开启 <a href="https://docs.gradle.org/2.9/userguide/gradle_daemon.html" target="_blank" rel="external">Gradle Daemon</a> 可以极大地提升java代码的增量编译速度。</p>
<blockquote>
<p>touch ~/.gradle/gradle.properties &amp;&amp; echo “org.gradle.daemon=true” &gt;&gt; ~/.gradle/gradle.properties</p>
</blockquote>
<h2 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h2><blockquote>
<p>react-native init AwesomeProject</p>
<p>cd AwesomeProject</p>
<p>react-native run-android</p>
<p>提示：你可以使用–version参数创建指定版本的项目。例如 react-native init MyApp –version 0.39.2。注意版本号必须精确到两个小数点.</p>
</blockquote>
<p>你也可以在 <a href="https://nuclide.io/" target="_blank" rel="external">Nuclide</a> 中打开AwesomeProject文件夹然后<a href="http://nuclide.io/docs/platforms/react-native/#running-applications" target="_blank" rel="external">运行</a>。</p>
<blockquote>
<p>注意，react-native run-android 时，需要打开一个 Android 设备的模拟器，不然会报错</p>
</blockquote>
<h3 id="其他问题。"><a href="#其他问题。" class="headerlink" title="其他问题。"></a>其他问题。</h3><p>如果看完这些，还有其他问题，请查阅 <a href="http://reactnative.cn/" target="_blank" rel="external">React Native 中文网</a>，里面有详细的使用文档。<br>或者参阅 <a href="http://facebook.github.io/react-native/" target="_blank" rel="external">Facebook 的 React Native 的官方文档</a>.</p>
<p>我也是一个初学者，谢谢。</p>
 <!--more-->
]]></content>
      
        <categories>
            
            <category> React Native </category>
            
        </categories>
        
        
        <tags>
            
            <tag> React Native </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 开发实用小技巧]]></title>
      <url>/2017/09/19/Android%20%E5%BC%80%E5%8F%91%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h3 id="文本与布局"><a href="#文本与布局" class="headerlink" title="文本与布局"></a>文本与布局</h3><ol>
<li><p>字符串资源里的变量替换<br>当程序中使用字符串如第 345 页，我们不可能使用两个字符串资源如</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;string name="di"&gt;第&lt;/string&gt; </div><div class="line">&lt;string name="page"&gt;页&lt;/string&gt;</div></pre></td></tr></table></figure>
 <a id="more"></a>
<p>在 android 中有一个东西是 XLIFF，全称是 XML 本地化数据交换格式，英文是 XML Loca lization Interchange File Format。<br>用法很简单，如下所示</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;string name="page"&gt;第%1$s页&lt;/string&gt;</div><div class="line">程序中只要给变量赋值就好了，如下：</div><div class="line">String page = getString(R.string.page,"345");</div></pre></td></tr></table></figure>
<p>要是有多个变量，如第 345 页 24 行 ? 这也好办，如下:</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;string name="page"&gt;第%1$s页%2$s行&lt;/string&gt;</div><div class="line">String page = getString(R.string.page,"345","24");</div></pre></td></tr></table></figure>
</li>
<li><p>TextView 设置多种字体大小</p>
<p><img src="https://github.com/xxtlant/BlogPicture/blob/master/android%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/TextViewSpan.png?raw=true" alt="TextView字体"></p>
<p>像这样的两种字体，要如何处理呢</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">    String text = <span class="string">"Android实战技巧之文本与布局"</span>;</div><div class="line">    <span class="keyword">int</span> start = text.indexOf(<span class="string">'之'</span>);</div><div class="line">    <span class="keyword">int</span> end = text.length();</div><div class="line">    Spannable textSpan =  <span class="keyword">new</span> SpannableString(text);</div><div class="line">    textSpan.setSpan(<span class="keyword">new</span> AbsoluteSizeSpan(<span class="number">20</span>), <span class="number">0</span>, start,</div><div class="line">                    Spannable.SPAN_INCLUSIVE_INCLUSIVE);</div><div class="line">    textSpan.setSpan(<span class="keyword">new</span> AbsoluteSizeSpan(<span class="number">12</span>), start,</div><div class="line">                    end, Spannable.SPAN_INCLUSIVE_INCLUSIVE);</div><div class="line">    ``` </div><div class="line">    这个 textSpan 就是你想要的。</div><div class="line">    </div><div class="line"><span class="number">3</span>. TextView 的超链接</div><div class="line">  这个很简单，在 xml 中属性 `autoLink=“all”`。</div><div class="line">  程序中 `TextView.setAutoLink(Linkify.ALL)`;</div><div class="line">  说一下 `autoLink` 中的参数：</div><div class="line"></div><div class="line">    ```java</div><div class="line">    Linkify.EMAIL_ADDRESS -- 仅识别出 TextView 中的 Email 在址，标识为超链接，点击后会跳到 Email，发送邮件给此地址</div><div class="line">    Linkify.PHONE_NUMBERS -- 仅识别出 TextView 中的电话号码，标识为超链接，点击后会跳到 Dialer，Call 这个号码</div><div class="line">    Linkify.WEB_URLS-- 仅识别出 TextView 中的网址，标识为超链接，点击后会跳到 Browser 打开此 URL Linkify.ALL -- 这个选项是识别出所有系统所支持的特殊 Uri，然后做相应的操作</div></pre></td></tr></table></figure>
<p> 特殊情况:<br>当一段文字部分是超链接或者我们需要点击超链接跳到另一个 Activity时，如何处理?</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> TextView testText;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        testText = (TextView) findViewById(R.id.testText); </div><div class="line">        <span class="comment">//将TextView的显示文字设置为SpannableString</span></div><div class="line">        testText.setText(getClickableSpan());</div><div class="line">        <span class="comment">//设置该句使文本的超连接起作用</span></div><div class="line">        testText.setMovementMethod(LinkMovementMethod.getInstance());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//设置超链接文字</span></div><div class="line">    <span class="function"><span class="keyword">private</span> SpannableString <span class="title">getClickableSpan</span><span class="params">()</span> </span>&#123;</div><div class="line">        SpannableString spanStr = <span class="keyword">new</span> SpannableString(<span class="string">"使用该软件，即表示您同意该软件的使用条款和隐私政策"</span>); <span class="comment">//设置下划线文字</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> UnderlineSpan(), <span class="number">16</span>, <span class="number">20</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); <span class="comment">//设置文字的单击事件</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> ClickableSpan() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View widget)</span> </span>&#123;</div><div class="line">                startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, TestActivity1.class));</div><div class="line">            &#125;</div><div class="line">        &#125;, <span class="number">16</span>, <span class="number">20</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</div><div class="line">        <span class="comment">//设置文字的前景色</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> ForegroundColorSpan(Color.WHITE), <span class="number">16</span>, <span class="number">20</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); <span class="comment">//设置下划线文字</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> UnderlineSpan(), <span class="number">21</span>, <span class="number">25</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</div><div class="line">        <span class="comment">//设置文字的单击事件</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> ClickableSpan() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View widget)</span> </span>&#123;</div><div class="line">                startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, TestActivity2.class));</div><div class="line">            &#125;</div><div class="line">        &#125;, <span class="number">21</span>, <span class="number">25</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</div><div class="line">        <span class="comment">//设置文字的前景色</span></div><div class="line">        spanStr.setSpan(<span class="keyword">new</span> ForegroundColorSpan(Color.WHITE), <span class="number">21</span>, <span class="number">25</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</div><div class="line">        <span class="keyword">return</span> spanStr;</div><div class="line">    &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>Java 文件中字体加粗</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Typeface </span></div><div class="line">textView.setTypeface(Typeface.defaultFromStyle(Typeface.BOLD));</div><div class="line"><span class="comment">//use TextPaint</span></div><div class="line">textView.getPaint().setFakeBoldText(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="按钮控制-ViewPager-的左右翻页"><a href="#按钮控制-ViewPager-的左右翻页" class="headerlink" title="按钮控制 ViewPager 的左右翻页"></a>按钮控制 ViewPager 的左右翻页</h3><p>为了实现左右翻页的效果，使用了 ViewPager，它会很方便的实现左右滑动后翻页。 这时需要自己也加上两个 button 来实现同样的操作，如何实现呢?<br>通过查看 ViewPager 的源码，里面有一个公共方法 arrowScroll ，查看代码 们可以有两个重要的发现:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">executeKeyEvent</span><span class="params">(KeyEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> handled = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span> (event.getAction() == KeyEvent.ACTION_DOWN) &#123;</div><div class="line">            <span class="keyword">switch</span> (event.getKeyCode()) &#123;</div><div class="line">                <span class="keyword">case</span> KeyEvent.KEYCODE_DPAD_LEFT: <span class="comment">//键盘方向键左键的控制，向左翻页</span></div><div class="line">                    handled = arrowScroll(FOCUS_LEFT);<span class="comment">//FOCUS_LEFT:17</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> KeyEvent.KEYCODE_DPAD_RIGHT:<span class="comment">//键盘方向键右键的控制，向右翻页</span></div><div class="line">                    handled = arrowScroll(FOCUS_RIGHT);<span class="comment">//FOCUS_RIGHT:66</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> KeyEvent.KEYCODE_TAB:</div><div class="line">                    <span class="keyword">if</span> (event.hasNoModifiers()) &#123;</div><div class="line">                        handled = arrowScroll(FOCUS_FORWARD);<span class="comment">// 向前 -&gt; 右翻 FOCUS_FORWARD:2</span></div><div class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.hasModifiers(KeyEvent.META_SHIFT_ON)) &#123;</div><div class="line">                        handled = arrowScroll(FOCUS_BACKWARD);<span class="comment">// 向后 -&gt; 左翻 FOCUS_BACKWARD:1</span></div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> handled;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">arrowScroll</span><span class="params">(<span class="keyword">int</span> direction)</span> </span>&#123;</div><div class="line">        ...</div><div class="line">        <span class="keyword">if</span> (nextFocused != <span class="keyword">null</span> &amp;&amp; nextFocused != currentFocused) &#123;</div><div class="line">            <span class="keyword">if</span> (direction == View.FOCUS_LEFT) &#123;</div><div class="line">                ... <span class="comment">// 省略一些无关代码</span></div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction == View.FOCUS_RIGHT) &#123;</div><div class="line">                ... <span class="comment">// 省略一些无关代码</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction == FOCUS_LEFT || direction == FOCUS_BACKWARD)&#123; <span class="comment">// 17 or 1 向左翻页</span></div><div class="line">            <span class="comment">// Trying to move left and nothing there; try to page.</span></div><div class="line">            handled = pageLeft();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction == FOCUS_RIGHT || direction == FOCUS_FORWARD) &#123; <span class="comment">// 66 or 2 向右翻页</span></div><div class="line">            <span class="comment">// Trying to move right and nothing there; try to page.</span></div><div class="line">            handled = pageRight();</div><div class="line">        &#125;</div><div class="line">        ... <span class="comment">//省略一些无关代码</span></div><div class="line">        <span class="keyword">return</span> handled;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>也就是说， 我们调用 arrowScroll 方法用参数 1 或者 17 就可以实现向左翻页;参数 2 或 66 就可以实现向右翻页。 后记:<br>当你的 UI 中有 EditText 这种获得 focus 的 widget 时， 必须用 17 和 66，否则要报错。</p>
<h3 id="获得屏幕物理尺寸、密度及分辨率"><a href="#获得屏幕物理尺寸、密度及分辨率" class="headerlink" title="获得屏幕物理尺寸、密度及分辨率"></a>获得屏幕物理尺寸、密度及分辨率</h3><h4 id="获取屏幕的宽高"><a href="#获取屏幕的宽高" class="headerlink" title="获取屏幕的宽高"></a>获取屏幕的宽高</h4><p>需要注意的原来经常使用的 getHeight() 与 getWidth() 已经不推荐使用了，建议使用 getSize()来替代。</p>
<p>参数是一个返回参数，用以返回分辨率的 Point，这个 Point 也比较简单，我们只需要关注 x 和 y 这两个成员就可以了。<br>用法如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSize</span><span class="params">(Point outSize)</span> </span>&#123; </div><div class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">        updateDisplayInfoLocked();  </div><div class="line">        mDisplayInfo.getAppMetrics(mTempMetrics, mDisplayAdjustments);</div><div class="line">        outSize.x = mTempMetrics.widthPixels;</div><div class="line">        outSize.y = mTempMetrics.heightPixels;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>此外 <code>Display</code>又提供了另一个方法：<code>getRealSize()</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getRealSize</span><span class="params">(Point outSize)</span> </span>&#123; </div><div class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">        updateDisplayInfoLocked();</div><div class="line">        outSize.x = mDisplayInfo.logicalWidth; </div><div class="line">        outSize.y = mDisplayInfo.logicalHeight;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>从两个方法的实现上看是有区别的。那么差异究竟在哪里，下面做一些实验来验证一下。<br>当<code>Activity</code>的主题是全屏主题时<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">android:theme=<span class="string">"@android:style/Theme.Black.NoTitleBar.Fullscreen"</span> </div><div class="line">android:theme=<span class="string">"@android:style/Theme.NoTitleBar.Fullscreen"</span></div></pre></td></tr></table></figure></p>
<p>二者返回的宽高是一样的，但是当不是全屏主题是，例如 <code>Activity</code> 主题有<code>ToolBar/ActionBar</code>时，二者返回的宽高就不一样了。<br>测试如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">getSize():</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getDisplaySize</span><span class="params">()</span> </span>&#123;</div><div class="line">    Point point = <span class="keyword">new</span> Point(); getWindowManager().getDefaultDisplay().getSize (point);     </div><div class="line">    Log.d(TAG,<span class="string">"the screen size is "</span>+point.toString());</div><div class="line">&#125;</div><div class="line"><span class="comment">// 结果如下 返回的高度是去掉 toolbar 的高度</span></div><div class="line">D/SecondActivity: <span class="function">the screen size is <span class="title">Point</span><span class="params">(<span class="number">1080</span>, <span class="number">1794</span>)</span></span></div><div class="line"></div><div class="line"><span class="title">getRealSize</span><span class="params">()</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getDisplayInfomation</span><span class="params">()</span> &#123;</div><div class="line">    Point point = <span class="keyword">new</span> Point(); getWindowManager().getDefaultDisplay().getSize (point);</div><div class="line">    Log.d(TAG,<span class="string">"the screen size is "</span>+point.toString());</div><div class="line">&#125;</div><div class="line"><span class="comment">// 结果如下 是屏幕真实的宽高</span></div><div class="line">D/SecondActivity: <span class="function">the screen size is <span class="title">Point</span><span class="params">(<span class="number">1080</span>, <span class="number">1920</span>)</span></span></div></pre></td></tr></table></figure></p>
<h4 id="屏幕尺寸，设备的物理屏幕尺寸"><a href="#屏幕尺寸，设备的物理屏幕尺寸" class="headerlink" title="屏幕尺寸，设备的物理屏幕尺寸"></a>屏幕尺寸，设备的物理屏幕尺寸</h4><ol>
<li><p>屏幕尺寸，设备的物理屏幕尺寸<br> 现如今 <code>Android</code> 手机尺寸杂乱无章，有规则的，也有奇葩的尺寸，<a href="http://screensiz.es/" target="_blank" rel="external">手机屏幕尺寸</a> 这个网站，记录了一些 <code>Android、IOS</code> 屏幕的尺寸比例。<br> 不同的屏幕尺寸是可以通过采用相同的分辨率，它们之间的区别就在于<strong>密度(density)</strong>不同</p>
</li>
<li><p>那些搞晕你的单位：DPI / PPI / DP / PX<br> APP 中尺寸单位和各自的意思<br> | 尺寸单位  | 代表的意思   |<br> | ——–   | :—–  |<br> | px: pixel |【像素】  电子屏幕上组成一幅图画或照片的最基本单元|<br> | pt: ponit |   【点】印刷行业常用单位，等于1/72英寸   |<br> | ppi: pixel per inch |【每英寸像素数】  该值越高，则屏幕越细腻 |<br> | dpi: dot per inch |【每英寸像素数】  该值越高，则屏幕越细腻 |<br> | dp/dip:Density-independent pixel | 安卓开发用的长度单位，1dp表示在屏幕像素点密度为160ppi时1px长度 |<br> | sp: scale-independent pixel | 安卓开发用的字体大小单位| </p>
<p> <strong>相互关系</strong></p>
<ul>
<li><p>pt 和 px</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>pt = (DPI / <span class="number">72</span>)px</div></pre></td></tr></table></figure>
<p> 当在 ps 中新建画布的分辨率为 72ppi(即72dpi),1pt = 1px</p>
</li>
<li><p>PPI 和 DPI<br> DPI 最初适用于衡量打印物上每英寸的点数密度。DPI 值越小图片越不精细。当 DPI 的概念用在计算机屏幕上时，就称为了 PPI。同理：PPI 就是计算机屏幕上每英寸可以显示的像素点的数量。因此，在电子屏幕中提到的 PPI 和 DPI 是一致的。</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可认为 DPI = PPI</div></pre></td></tr></table></figure>
</li>
<li><p>PPI 的计算方法<br>  <img src="http://upload-images.jianshu.io/upload_images/3303429-c7a1c80febcc85a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ppi 的计算方法">    </p>
</li>
<li><p>px 和 dp<br>dp为安卓开发时的长度单位，根据不同的屏幕分辨率，与px有不同的对应关系。<br>dp的大小的定义为：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>dp=（屏幕 ppi / <span class="number">160</span>）px</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<pre><code>![DPI 与 PPI](https://github.com/xxtlant/BlogPicture/blob/master/android%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/dpi%E4%B8%8E%E5%AF%86%E5%BA%A6%E7%9A%84%E6%8D%A2%E7%AE%97.png?raw=true)

- dp 和 sp
dp和sp类似，都会随着屏幕大小和分辨率变化而改变，不同的是，在android中，dp表示长度单位，sp表示字体大小，在多数情况下

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>dp=<span class="number">1</span>sp</div></pre></td></tr></table></figure>

但是在文字尺寸是“大”或“超大”时，1sp &gt; 1dp。
&lt;!--more--&gt;
</code></pre>]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> 实战技巧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 常用插件整理]]></title>
      <url>/2017/08/19/Android%20Studio%20%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p>最近改用 Android Studio 3.0 preview ,顺便整理一下，常用的插件。</p>
<h4 id="GsonFormat"><a href="#GsonFormat" class="headerlink" title="GsonFormat"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7654-gsonformat" target="_blank" rel="external">GsonFormat</a></span></h4><p> 将 Json 字符串快速转成 JavaBean 对象，免去我们根据 Json 字符串手写对应 Java Bean 的过程.</p>
<p><img src="https://plugins.jetbrains.com/files/7654/screenshot_15729.png" alt="gsonFormat"><br>Tips: 可以使用快捷键 alt + s (windows)  / option + s (mac) </p>
<a id="more"></a>
<h4 id="Android-ButterKnife-Zelezny"><a href="#Android-ButterKnife-Zelezny" class="headerlink" title="Android ButterKnife Zelezny"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7369-android-butterknife-zelezny" target="_blank" rel="external">Android ButterKnife Zelezny</a></span></h4><p>配合 <a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">butterknife</a> 实现注解，不用再手动实现 findViewById 了。</p>
<p><img src="https://plugins.jetbrains.com/files/7369/screenshot_14384.png" alt="Android ButterKnife Zelezny"></p>
<h4 id="Android-Methods-Count"><a href="#Android-Methods-Count" class="headerlink" title="Android Methods Count"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8076-android-methods-count" target="_blank" rel="external">Android Methods Count</a></span></h4><p> 显示依赖库中得方法数<br><img src="https://plugins.jetbrains.com/files/8076/screenshot_15509.png" alt="Android Methods Count"></p>
<h4 id="Lifecycle-Sorter"><a href="#Lifecycle-Sorter" class="headerlink" title="Lifecycle Sorter"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7742-lifecycle-sorter" target="_blank" rel="external">Lifecycle Sorter</a></span></h4><p> 可以根据Activity或者fragment的生命周期对其生命周期方法位置进行先后排序， windows 快捷键Ctrl + alt + K . Mac 快捷键 option + command + K.<br><img src="https://plugins.jetbrains.com/files/7742/screenshot_15070.png" alt="Lifecycle Sorter"></p>
<h4 id="Android-Code-Generator"><a href="#Android-Code-Generator" class="headerlink" title="Android Code Generator"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7595-android-code-generator" target="_blank" rel="external">Android Code Generator</a></span></h4><p> 根据布局文件快速生成对应的Activity，Fragment，Adapter，Menu。<br><img src="https://plugins.jetbrains.com/files/7595/screenshot_14834.png" alt="Android Code Generator"></p>
<h4 id="Android-Parcelable-code-generator"><a href="#Android-Parcelable-code-generator" class="headerlink" title="Android Parcelable code generator"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7332-android-parcelable-code-generator" target="_blank" rel="external">Android Parcelable code generator</a></span></h4><p> JavaBean 序列化，快速实现 Parcelable 接口。<br><img src="https://segmentfault.com/image?src=http://img.blog.csdn.net/20160416104459926&amp;objectId=1190000005092842&amp;token=ab29ed79d41be9e42b3a3d2ed1ec3bef" alt="Android Parcelable code generator"></p>
<h4 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7275-codeglance" target="_blank" rel="external">CodeGlance</a></span></h4><p> 在右边实现代码预览，类似于 sublime ，快速定位。<br><img src="https://plugins.jetbrains.com/files/7275/screenshot_16821.png" alt="CodeGlance"></p>
<h4 id="FindBugs-IDEA"><a href="#FindBugs-IDEA" class="headerlink" title="FindBugs-IDEA"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/3847-findbugs-idea" target="_blank" rel="external">FindBugs-IDEA</a></span></h4><p> 查找 bug 的插件。具体使用可见 freddyyao 的简书文章 -&gt; <a href="http://www.jianshu.com/p/bc27857c89e4" target="_blank" rel="external">代码缺陷扫描神器——FindBugs</a><br><img src="https://plugins.jetbrains.com/files/3847/screenshot_2542.png" alt="FindBugs-IDEA"></p>
<h4 id="ADB-WIFI"><a href="#ADB-WIFI" class="headerlink" title="ADB WIFI"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7856-adb-wifi" target="_blank" rel="external">ADB WIFI</a></span></h4><p> 使用wifi无线调试你的app，无需root权限<br><img src="https://plugins.jetbrains.com/files/7856/screenshot_15153.png" alt="ADB WIFI"></p>
<h4 id="JSONOnlineViewer"><a href="#JSONOnlineViewer" class="headerlink" title="JSONOnlineViewer"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7838-jsononlineviewer" target="_blank" rel="external">JSONOnlineViewer</a></span></h4><p> 在 Android Studio 中，请求、调试接口<br><img src="https://plugins.jetbrains.com/files/7838/screenshot_15113.png" alt="JSONOnlineViewer"></p>
<h4 id="Android-Styler"><a href="#Android-Styler" class="headerlink" title="Android Styler"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7972-android-styler" target="_blank" rel="external">Android Styler</a></span></h4><p> 根据 xml 自动生成 style 代码的插件。 需要把要生成 style 的代码 copy 到 styles.xml 中，选中进行设置。<br><img src="https://plugins.jetbrains.com/files/7972/screenshot_15340.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7972/screenshot_15339.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7972/screenshot_15338.png" alt="Android Styler"></p>
<h4 id="Android-Drawable-Importer"><a href="#Android-Drawable-Importer" class="headerlink" title="Android Drawable Importer"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7658-android-drawable-importer" target="_blank" rel="external">Android Drawable Importer</a></span></h4><p> 这是一个非常强大的图片导入插件。它导入Android图标与Material图标的Drawable ，批量导入Drawable ，多源导入Drawable（即导入某张图片各种dpi对应的图片）<br><img src="https://plugins.jetbrains.com/files/7658/screenshot_15533.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7658/screenshot_15532.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7658/screenshot_15534.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7658/screenshot_15536.png" alt=""><br><img src="https://plugins.jetbrains.com/files/7658/screenshot_15351.png" alt="Android Drawable Importer"></p>
<h4 id="Genymotion"><a href="#Genymotion" class="headerlink" title="Genymotion"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7269-genymotion" target="_blank" rel="external">Genymotion</a></span></h4><p> 一款速度较快的 Android 模拟器，可以在 Android Studio 中直接开启。<br><img src="https://plugins.jetbrains.com/files/7269/screenshot_14278.png" alt="Genymotion"></p>
<h4 id="SQLScout"><a href="#SQLScout" class="headerlink" title="SQLScout"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8322-sqlscout-sqlite-support-" target="_blank" rel="external">SQLScout</a></span></h4><p> 在 Android Studio 中调试数据库 (SQLite)</p>
<p>详细使用参考：<a href="https://juejin.im/post/58e0d781a0bb9f0069ec08d3" target="_blank" rel="external">在 Android Studio 上调试数据库 ( SQLite )</a><br><img src="https://plugins.jetbrains.com/files/8322/screenshot_15823.png" alt="SQLScout"></p>
<h4 id="GradleDependenciesHelperPlugin"><a href="#GradleDependenciesHelperPlugin" class="headerlink" title="GradleDependenciesHelperPlugin"></a><span style="font-size: 12pt;"><a href="https://github.com/ligi/GradleDependenciesHelperPlugin" target="_blank" rel="external">GradleDependenciesHelperPlugin</a></span></h4><p> maven gradle 依赖支持自动补全<br><img src="http://upload-images.jianshu.io/upload_images/3303429-15b6eed60db1bbde?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GradleDependenciesHelperPlugin"></p>
<h4 id="RemoveButterKnife"><a href="#RemoveButterKnife" class="headerlink" title="RemoveButterKnife"></a><span style="font-size: 12pt;"><a href="https://github.com/u3shadow/RemoveButterKnife" target="_blank" rel="external">RemoveButterKnife</a></span></h4><p> ButterKnife这个第三方库每次更新之后，绑定view的注解都会改变，从bind,到inject，再到bindview，搞得很多人都不敢升级，一旦升级，就会有巨量的代码需要手动修改，非常痛苦当我们有一些非常棒的代码需要拿到其他项目使用，但是我们发现，那个项目对第三方库的使用是有限制的，我们不能使用butterknife，这时候，我们又得从注解改回findviewbyid针对上面的两种情况，如果view比较少还好说，如果有几十个view，那么我们一个个的手动删除注解，写findviewbyid语句，简直是一场噩梦（别问我为什么知道这是噩梦）所以，这种有规律又重复简单的工作为什么不能用一个插件来实现呢？于是RemoveButterKnife的想法就出现了。<br><a href="http://www.u3coding.com/2016/06/24/androidstudio-plugin-removebutterknife-di/" target="_blank" rel="external">具体介绍</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3303429-43ff9b5a2e3a1405?imageMogr2/auto-orient/strip" alt="RemoveButterKnife"></p>
<h4 id="AndroidProguardPlugin"><a href="#AndroidProguardPlugin" class="headerlink" title="AndroidProguardPlugin"></a><span style="font-size: 12pt;"><a href="https://github.com/zhonghanwen/AndroidProguardPlugin" target="_blank" rel="external">AndroidProguardPlugin</a></span></h4><p> 一键生成项目混淆代码插件，值得你安装~<br><img src="https://camo.githubusercontent.com/adef227c0dc014f53b6e2a46977ef9ff2ceeb5a4/687474703a2f2f3778726e6b6f2e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f616e64726f696470726f6775617264312e676966" alt="AndroidProguardPlugin"></p>
<h4 id="EventBus3-Intellij-Plugin"><a href="#EventBus3-Intellij-Plugin" class="headerlink" title="EventBus3 Intellij Plugin"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8603-eventbus3-intellij-plugin" target="_blank" rel="external">EventBus3 Intellij Plugin</a></span></h4><p> 为 EventBus 提供快速索引和跳转（目前只支持 EventBus 3.x 版本）<br>从 EventBus.post 到 @Subscribe 或者 onEventMainThread<br>从 @Subscribe 到 EventBus.post</p>
<p><img src="https://plugins.jetbrains.com/files/8603/screenshot_16147.png" alt="EventBus3 Intellij Plugin"></p>
<h4 id="Android-Studio-Prettify"><a href="#Android-Studio-Prettify" class="headerlink" title="Android Studio Prettify"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7405" target="_blank" rel="external">Android Studio Prettify</a></span></h4><p> 可以将代码中的字符串写在string.xml文件中<br>选中字符串鼠标右键选择图中所示<br><img src="https://plugins.jetbrains.com/files/7405/screenshot_14418.png" alt="Android Studio Prettify"></p>
<h4 id="ignore"><a href="#ignore" class="headerlink" title=".ignore"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7495--ignore" target="_blank" rel="external">.ignore</a></span></h4><p> 在Git 中想要过滤掉一些不想提交的文件，可以把相应的文件添加到.gitignore 中，而.gitignore 这个Android Studio 插件根据不同的语言来选择模板，就不用自己在费事添加一些文件了，而且还有自动补全功能，过滤文件再也不要复制文件名了。<br>我们做项目的时候，并不是所有文件都是要提交的，比如构建的build 文件夹，本地配置文件，每个Module 生成的iml 文件，但是我们每次add，commit 都会不小心把它们添加上去，而gitignore 就是解决这种痛点的，如果你不想提交的文件，就可以在创建项目的时候将这个文件中添加即可，将一些通用的东西屏蔽掉。</p>
<p><img src="https://plugins.jetbrains.com/files/7495/screenshot_14959.png" alt=".ignore"></p>
<h4 id="Markdown-Navigator"><a href="#Markdown-Navigator" class="headerlink" title="Markdown Navigator"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7896-markdown-navigator" target="_blank" rel="external">Markdown Navigator</a></span></h4><p> markdown插件</p>
<p><img src="https://plugins.jetbrains.com/files/7896/screenshot_15818.png" alt="Markdown Navigator"></p>
<h4 id="ECTranslation"><a href="#ECTranslation" class="headerlink" title="ECTranslation"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8469-ectranslation" target="_blank" rel="external">ECTranslation</a></span></h4><p> Android Studio 翻译插件,可以将英文翻译为中文.</p>
<p><img src="https://github.com/Skykai521/ECTranslation/raw/master/img/translation_img.png" alt="ECTranslation"></p>
<h4 id="Codota"><a href="#Codota" class="headerlink" title="Codota"></a><span style="font-size: 12pt;"><a href="http://www.codota.com/" target="_blank" rel="external">Codota</a></span></h4><p> 搜索最好的Android代码.</p>
<h4 id="Exynap"><a href="#Exynap" class="headerlink" title="Exynap"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8600-exynap" target="_blank" rel="external">Exynap</a></span></h4><p> Exynap 一个帮助开发者自动生成样板代码的 AndroidStudio 插件<br><img src="https://plugins.jetbrains.com/files/8600/screenshot_16141.png" alt="Exynap"></p>
<h4 id="MVPHelper"><a href="#MVPHelper" class="headerlink" title="MVPHelper"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/8507-mvphelper" target="_blank" rel="external">MVPHelper</a></span></h4><p> 一款Intellj IDEA 和Android Studio的插件，可以为MVP生成接口以及实现类，解放双手。<br>具体请查看<a href="http://androidwing.net/index.php/27" target="_blank" rel="external">Android Studio插件之MVPHelper，一键生成MVP代码</a>一文<br><img src="https://github.com/githubwing/MVPHelper/raw/master/img/mvp_presenter.gif" alt="MVPHelper"></p>
<h4 id="ADB-Idea"><a href="#ADB-Idea" class="headerlink" title="ADB Idea"></a><span style="font-size: 12pt;"><a href="https://plugins.jetbrains.com/plugin/7380-adb-idea" target="_blank" rel="external">ADB Idea</a></span></h4><p> 一键清理缓存、卸载，重启 APP</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3303429-2989b94e026cc0cd.gif?imageMogr2/auto-orient/strip" alt="adb-idea.gif"><br><!--more--></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Android Studio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记第一次与传销的正面接触]]></title>
      <url>/2017/06/24/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8E%E4%BC%A0%E9%94%80%E7%9A%84%E6%AD%A3%E9%9D%A2%E6%8E%A5%E8%A7%A6/</url>
      <content type="html"><![CDATA[<blockquote>
<p><em><strong>传销是指组织者发展人员，通过对被发展人员以其直接或者间接发展的人员数量或者业绩为依据计算和给付报酬，或者要求被发展人员以交纳一定费用为条件取得加入资格等方式获得财富的违法行为。</strong></em></p>
<p><em><strong> –摘自百度百科</strong></em></p>
</blockquote>
<p><strong>上月末，好朋友告诉我说，他弟弟被传销了，发信息向他求救，打电话向廊坊报警，得到的回复是必须要到当地才可以报警立案，随后在他家乡和杭州报警询问，得到的结果都是说要到当地报警。于是马上一起去了河北廊坊，去寻求警方的帮助，然而后几天的经历才发现，’人民的名义’中那些正气的警察真的只是在电视中才会出现的，至少说我们是没有遇到的。</strong><br><a id="more"></a> </p>
<hr>
<p>2017-07-29 10:01:55</p>
<p>一更，大约一个月之前，A 再次求救，说是现在已经领悟了，然后希望去救他，然后 A 的妈妈，去了廊坊，在当地警方一直不愿意去找的情况下，然后死磕派出所，然后虽然最终去找，但是并不在那里。</p>
<p>A 是通过翻墙逃跑（翻墙是那个传销点的老大让他翻墙走，原因是怕警察找到这个点），然后出来的。</p>
<p>最终得救。</p>
<p>以上。</p>
<hr>
<p>以下称朋友的弟弟为 A 。</p>
<ul>
<li>5.31 上午到达河北廊坊。<br>到廊坊后，第一件事就是去廊坊市公安局报案，然后却被拦在市公安局门口不让进，然后保安态度恶劣，让我们打 110 报案，然后我们就在市公安局门口打 110 报案，然后电话是廊坊市新开路派出所接的，然后让我们到哪里去，我们问为什么市公安局不让进，为什么不能去公安局报案，要去派出所，得到的回复是，市公安局是他们所在的派出所管辖的辖区，市公安局不接待访客，让我们去派出所。</li>
</ul>
<p>虽然有点生气，但是为了营救 A，还是去了派出所，然后到达派出所后，进行身份登记后，我们把情况都告诉他们了，说了我们现在有定位，有求救信息，有电话可以进行定位，然后询问能不能立案，得到的回复却依然是不能，民警说，立案需要取证，需要进行侦查，然后只能尽力给我们协助，但不会负责到底，有案件管辖权的问题，然后我们又说，举报传销可不可以立案，民警依然是说不能，需要取证才可以。</p>
<p>然后另一个民警，抽着烟翘着二郎腿，和我们说，可以在走失地报人口失踪，我们讲因为我们现在有时候还可以联系到 A，所以报不了人口失踪，又因为我们知道 A 在廊坊，而且报警也是让我们来这边才会受理，我们才来的。</p>
<p>然后民警问我们现在知道的位置，然后说位置属于北旺派出所，让我们去那边。而且还问我们为什么会接待我们，我们回答，是因为我们报了案，他说，是因为我们在市公安局报了案，属于他们辖区，他们才接待的。</p>
<p>之后我们打车去北旺派出所，觉得这些民警都不在乎，不在意这事情。</p>
<p>到达北旺派出所后，被拦在了接待室，只能在接待室进行报案，和这个接待的民警说了这些情况，这个民警说我们来之前不久，也有一个人来报案，也是关于传销，是他妹妹被传销了，然后说了些廊坊有几大传销窝点，打击了好几次了，然后让我们留下了三分照片材料，说会给三个班都说一下，然后会把信息给领导，排警察进行摸查，确定了位置就会去取缔，然后让我们等消息。</p>
<p><strong>第一天感觉并不好，觉得警察都不在意，对于亲属来说这是件天大的事情，然而对于他们来讲，感觉就是件司空见惯的事情，给人的感觉就是敷衍过去就可以了。</strong></p>
<ul>
<li>6.1 日第二天， 绝望的一天，<strong>比坏人更可恨的是，知道却不作为的警察。</strong><br>上午去广阳区工商局进行举报传销，然后到工商局的经检大队进行了举报传销，然后把已知的信息提供了，然后随口问了下市公安局可不可以进入，得到的答案居然是可以。</li>
</ul>
<p>随后我们又去廊坊市政府，想咨询下市公安局能不能进入，按我们的想法是市公安局作为一个政府机构，为什么不能接收群众的报案，哪怕是接收后分派到各辖区，然而询问市政府门前的民警们，也没有得到明确的答案，到底能不能进入，我们把昨天报案传销的经历告诉他们，他们讲如果有不作为的警察，可以去督察局举报他们。<br>再次给了我们一个希望。</p>
<p>下午去派出所询问案件情况，两点半警察才上班，等到两点半后，去询问的结果居然是，他不知道，说是昨天的班没有告诉他，然后我们讲昨天留了三分材料，他说昨天的班没有和他交接，可能是和别人，然后让他问一下，也没有问，就说不知道，还说有情况会和我们联系，搞笑，连案情都不知道，怎么和我们联系，之后，我们在北旺派出所的一阴凉处准备给督察局反应，但是却被这个接待的民警给赶出派出所，让我们出去打。</p>
<p>打广阳区电话，说要举报派出所，问举报电话时，接线员说不知道，给挂断了，再次打，告知了电话，却打了十几二十个都没人接，<strong>有点生气又绝望，警察不管，举报没人接，这就是真实的派出所吗。</strong></p>
<p>后来又遇到四个人报案，同事被传销，然后三个同事和他父亲来报案，之后在那边聊了会，他们的报案路线和我们的一样。去市公安局报案不让进，转到新开路派出所，派出所再转到当地辖区。</p>
<p>他们说已经去过大枣林看过，我们说了我们现在的情况，定位什么的都给他们看了，然后说想我们再一起去一下，但是他们却不想去了，也没有告诉我们多少信息，一直再问我们，同样的受害者却还不想相互帮助。</p>
<p>再离派出所十几米的地方，有一个照相馆，传销报案需要把当事人照片打印出来，然后照相馆的人会给你个电话，是当地黑社会捞人的电话，给钱就可以把人捞出来。</p>
<p>那个人的父亲好想是要通过这种方法来捞人。</p>
<p>之后我们打算自己去看一下，没有找到好心的当地人，然后就打了一辆出租车去看，出租车司机知道我们的目的后，说他一侄女也被传销了，后来他去救的。我们跟着定位走，很轻易地就找到了定位上的地方，果然里面有一伙传销，但是却被发现了，打草惊蛇，本想让司机大哥帮助我们下，一起进去看看，但是司机不想去，我们只能冒着他们逃走的风险，去派出所报案。</p>
<p>但是，遇到的居然是这种事情。</p>
<p><strong>前段时间刚看完人民的名义，侯亮平带领几辆警车闯红灯，一路到机场拦截欧阳靖，我们本想，就算不是这样，第一时间赶到那里就可以了</strong>。</p>
<p>但是。</p>
<p>去派出所报案，民警听了，一点不着急，然后不急不忙的去开警车和我们一起去，然后，他们居然要先去中途办一件民事纠纷！！！因为他们之前没时间去！！！</p>
<p>里面有三个警察，两个快退休的了，一个年轻一点，就这三个人，简直是民警的耻辱，我们说能不能先处理我们的案件，传销，A 的人身安全，去晚了就跑了，他们说跑不了，能跑到那里。我们说这是关系到 A 人身安全的问题，那个年轻的警察说，他这个也是人命关天，万一纠纷打架打死人呢。</p>
<p>？？？</p>
<p>特生气，然后他们到了后，下车后，我们两个想自己去，但是警车被锁住了，我们开不了，我们一直砸门喊他们开，过了一会才开，我们两个马上出去就走，他们告诉我们，处理完了。</p>
<p>我TM，这就是你们的案情紧急。</p>
<p>然后<strong>到那里，人跑了，留下一个人，一看就是放风的，这么简单的事情，警察居然不管不问，我们问那个人问题，警察不让我们问，我们让那个人那身份证，证明他身份，警察不让我们管，我们想让警察把那个人带回派出所询问，警察不带，什么都不问，不管。</strong></p>
<p>知道他们的处理方式吗。<strong>就是拿锄头把那屋子里的水缸锅给砸了，呵呵，这就是办案方式？</strong></p>
<p><strong>比坏人更可恨的是，知道还不作为的警察；知道是传销，却还不放在心上；人跑了，知道人说的是谎话，却连问都不问，敷衍了事的无作为；是一天天混吃等死，给警察拉低形象的混子。</strong></p>
<p>最终无功而返，反而打草惊蛇。</p>
<ul>
<li>6.2 日，最后一天<br><strong>在此要特别感谢以为朋友的老乡，做自媒体的老乡，我们在去廊坊之前微博发过很多，联系很多微博大V，自媒体，回应的寥寥无几。这个老乡还是蛮好的，以个人身份给我们建议，给我们提供帮助，再次感谢</strong>。</li>
</ul>
<p>这天见到了他本人，聊了下关于传销的情况，廊坊这边很多很多。</p>
<p>他也讲说把这件事和上面反应过，但是得到的回复是，现在廊坊在办书博会，不允许报道不好的事情。</p>
<p>还有一件，当时我们看来很可怕的事情，6.1 日晚上，我朋友接到一短信，问我们是不是再找人，捞人可以找他，当时看到的时候，天呐，觉得廊坊这边太危险了，朋友电话除了在派出所和工商局留下过，其他就是滴滴打车时司机打过。</p>
<p>据这个老乡讲，发短信这个是当地黑社会的。因为老乡L多次接触过传销，也救出来了一些人，他猜测捞人这么快的原因，一种可能是传销人员，然后他拉进去好多人，到一定的位置后，然后出来转行做这个，另一个是传销去找寻当地黑社会的保护，然后才会这么快找到。</p>
<p>之后，去广阳区督察局，举报昨天遇到的民警的事情，因为我们都有录音，查证据我们也有，然而我们又想多了。<br>1. 第一件是昨天去询问案情，民警的态度及处理方式，然后督查室只是记下来了。</p>
<p>2. 第二件就是去传销窝点的事情，然后我们说警察在中途去处理了民事纠纷，没有第一时间去窝点，我们讲可以分下轻重去执行，<br>得到的回应是，我们<strong>去派出所报案传销，派出所只能说协助，我们属于求助，然后其他人报案是属于派出所的案件，优先级比求助类高，派出所警力不够，只能按顺序来</strong>。<br><strong>然后说如果没有出警，我们可以向上级反应下，但是已经出警了，他们也没办法</strong></p>
<p>3. 第三件照相馆会给人捞人的电话，然后这个得到的回应是，有很多群众反应这个情况，但是这个事情在法律上并没有明确的规定，所以也很难监管。</p>
<p>4. 第四件事情问现在的传销能不能立案，得到的回应是去派出所报案，现在的传销都是求助类，还没有上升到一定的高度，就算抓到一个窝点，属于传销人员下线的，也处罚不了，只能记录他们身份，然后询问回不回家，就没有其他的了。</p>
<p>然后说他们新来的局长很重视这块，正在狠抓传销，北旺是重点区域。</p>
<p>然后，反应完，也感觉并没有什么用。</p>
<p>之后去火车站，打算回去。</p>
<p>然后我们想到要不要骗A说，朋友自己来了这边，看他过不过来，开始不接电话，后来，说来。</p>
<p>然后我们去求助火车站的警察，希望 A 来了后，可以帮忙一起抓住。</p>
<p>后来人来了，然后也抓住他了。</p>
<p>然后朋友和开始和他讲，不听。</p>
<p>他说就算是带他回去，他也会再回来。</p>
<p>然后我们打算强制带他回去，然后在火车站进站时，然后..我们就打起来了..</p>
<blockquote>
<p><em><strong>中国式传销 是虚假的公司，虚构的产品，什么都是空的，就只是让你拉人头，从入会费或者加盟费中提取少量提成。或者控制人身自由，没收财物，让你无法与外界联系，天天学习那些传销培训教材，让你学会怎么骗人，然后列名单、电话或书信邀约、摊牌、跟进、直至以各种方式交齐入会费或者加盟费。</strong></em></p>
<p><em><strong>现在的中国式传销是建立在精神控制的基础上，即让你通过他们的传销培训洗脑后自发的去组织进行传销；另外一些会控制你的人身自由，没收所有物品，并且通过暴力使你认可这些谎言。</strong></em></p>
<p><em><strong>摘自 百度百科 传销的发展形成</strong></em><br>后来朋友一直在和他讲，A 也讲了一些事情，初中的时候被人打，回家又没敢讲，最终导致不读书了。</p>
</blockquote>
<p>然后 A 说是想为家里好，但是不承认自己做的是错的路，一直说不回去，回去也会回来，说之前求助是因为觉得自己受不了那苦，然后又说不回去是他不受苦将来家里就会受苦，然后我们讲，受苦但是要受对方向，然后我们告诉他方向错误了，他不信也不听，然后怎么说都不听，怎么着怎么着。</p>
<p>然后后来朋友在和 A 一直讲，但是 A 就是不回去，说自己也搜过传销那些事情，但是他没有骗人去，所以才没有钱，是觉得在哪可以学到东西。</p>
<p>然后后来朋友让他回家看下妈妈，他说会回去但不是现在。</p>
<p>讲要是强行带他回去，他回去看一下，然后再回来。然后说一些不要干涉他之类的话，然后还说要和朋友断绝关系，去法院签断绝关系责任书，</p>
<p>我们两个，商量，既然他要自己选，就让他自己选，回家看一下他妈妈，还是不回去。</p>
<p>他选择了不回去，说自己的选择，你们拦住没有用。</p>
<p>我们两个也决定既然他那么不肯回去，就给他自己选择的机会。</p>
<p>也不知道这样是不是校园暴力给他造成的要想我，还是家庭教育造成的影响，还是自己走偏了。</p>
<p><strong>第一次正面面对传销，感受深刻，不知道到底是什么手段，会让一个人如此相信，即使和最亲近的人断绝关系也要相信这个。</strong></p>
<p><strong>我们也有想过可能会带不回来，结果虽然有点难过，但我们还是没有后悔的。</strong></p>
<p><strong>最生气的是，对于警察这一块。</strong></p>
<p><strong>警察的无作为，不在意，尤其是北旺派出所那几个民警，态度以及方法，都让人生气。</strong></p>
<p><strong>第一次体会到一个普通人在进行报案，维权的时候，作为受人民信任的警察，在面对群众举报的时候，毫不在意，真的是一颗老鼠屎坏了一锅粥。</strong></p>
<p><strong>从去廊坊时相信警察会帮忙找人，到自己这几天的经历，民警的敷衍，无作为，不在意，不追究，在去了传销窝点后，不去审问剩下的那一人，而是毫无责任感的砸掉水缸，赶走那人，但是这有什么意义呢。</strong></p>
<p><strong>电视上到处都是，警察是好人，会帮助有难的人民，连电影审查都规定警察不能是坏人，但是电视剧电影中，警察形象树立的再好又有什么用呢，亲自体验一次之后，心中的形象越好，崩塌的越厉害。还是提高下警察的责任感，努力打击坏人坏事才是最重要的。</strong></p>
<p><strong>经过这次事情，感想就是，在廊坊遇到的这些事情，导致我再也不想去那边。还有就是 相信警察都是好人，有事找警察 的这种思想，我应该已经没有了。</strong></p>
<p><strong>以上。</strong><br> <!--more--> </p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IOS 播放 android 录制的 amr 格式语音问题]]></title>
      <url>/2017/06/20/IOS%20%E6%92%AD%E6%94%BE%20android%20%E5%BD%95%E5%88%B6%E7%9A%84%20amr%20%E6%A0%BC%E5%BC%8F%E8%AF%AD%E9%9F%B3%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>项目在接入融云进行聊天时，android 发送的语音格式为 amr 格式，IOS 发送的格式为 wav 格式。</p>
<p>在进行语音聊天时，android 发送的语音消息，本地播放没有问题。IOS 播放有杂音。</p>
<p>在确定录制的 amr 格式的源文件可以在 IOS 上播放后，大约确定为传输过程中的编码问题。<br> <a id="more"></a></p>
<p>原因是因为 android 中 MediaRecorder 的编码格式以及输出文件格式设置错误，不是设置的 AMR 格式。<br>将 MediaRecorder 的音频设置，设置为 AMR 即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">// 设置所录制的声音的采样率。</div><div class="line">mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);</div><div class="line">/**设置音频文件的编码：AAC/AMR_NB/AMR_MB/Default 声音的（波形）的采样 */</div><div class="line">mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.AMR_NB);</div><div class="line">/ **</div><div class="line">  * 设置输出文件的格式：THREE_GPP/MPEG-4/RAW_AMR/Default THREE_GPP(3gp格式</div><div class="line">  * ，H263视频/ARM音频编码)、MPEG-4、RAW_AMR(只支持音频且音频编码要求为AMR_NB)</div><div class="line">  */</div><div class="line">mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);</div><div class="line">// 文件保存地址及名字</div><div class="line">targetFile = new File(targetDir, targetName);</div><div class="line">//设置输出文件的路径</div><div class="line">mMediaRecorder.setOutputFile(targetFile.getPath());</div><div class="line">// 设置录制的音频通道数</div><div class="line">mMediaRecorder.setAudioChannels(1);</div><div class="line">// 设置所录制的声音的采样率。</div><div class="line">mMediaRecorder.setAudioSamplingRate(8000);</div><div class="line">// 设置所录制的声音的编码位率。</div><div class="line">mMediaRecorder.setAudioEncodingBitRate(64);</div></pre></td></tr></table></figure>
 <!--more-->]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android 应用中实现 Cocos2dx 游戏的返回键监听]]></title>
      <url>/2017/04/26/Android%20%E5%BA%94%E7%94%A8%E4%B8%AD%E5%AE%9E%E7%8E%B0%20Cocos2dx%20%E6%B8%B8%E6%88%8F%E7%9A%84%E8%BF%94%E5%9B%9E%E9%94%AE%E7%9B%91%E5%90%AC/</url>
      <content type="html"><![CDATA[<p><span style="font-size: 12pt; font-family: 'courier new', courier, monospace;">在 Android 中实现返回键的监听，只要两种方式：</span></p>
<p><span style="font-size: 12pt; font-family: 'courier new', courier, monospace;">方式 1 ：监听返回键;</span></p>
<pre class="toolbar:2 plain:false lang:default decode:true">@Override
public void onBackPressed() {
    super.onBackPressed();
}</pre>
<span style="font-size: 12pt; font-family: 'courier new', courier, monospace;">
 <a id="more"></a>
方式 2 ：重写 keyDown() 方法，监听 KeyEvent 事件 ;</span>
<pre class="toolbar:2 plain:false lang:default decode:true ">//重写 keydown 事件
public boolean onKeyDown(int keyCode, KeyEvent event) {
if (keyCode == KeyEvent.KEYCODE_BACK) {
   if ((System.currentTimeMillis() - mkeyTime) &gt; 2000) {
            // 退出操作
        }
    }
}</pre>
<span style="font-family: 'courier new', courier, monospace; font-size: 12pt;">但是，在 Android studio 打开 Cocos2dx 游戏的 studio 版本后，无路是方式 1 还是方式 2 都无法监听到返回键的操作。</span>

<span style="font-family: 'courier new', courier, monospace; font-size: 12pt;">原因是因为在 Cocos2dx 下的  GLSurfaceView 类中，实现了  keyDown() 方法，导致事件在上层已经被处理掉了。</span>
<pre class="font-size:10 line-height:13 toolbar:2 plain:false show-plain:1 scroll:true lang:default decode:true ">GLSurfaceView.java

@Override
public boolean onKeyDown(final int pKeyCode, final KeyEvent pKeyEvent) {
    switch (pKeyCode) {
        case KeyEvent.KEYCODE_BACK:
            Cocos2dxVideoHelper.mVideoHandler.sendEmptyMessage(Cocos2dxVideoHelper.KeyEventBack);
         ....// 其他省略
        default:
            return super.onKeyDown(pKeyCode, pKeyEvent);
    }
}</pre>
<span style="font-family: 'courier new', courier, monospace;">在官方 API 中关于 keyDown() 的描述是 ：</span>
> public boolean onKeyDown (int keyCode, KeyEvent event)
> 
> 
> <span style="color: #ff0000;">**Called when a key was pressed down and not handled by any of the views inside of the activity.**</span> So, for example, key presses while the cursor is inside a TextView will not trigger the event (unless it is a navigation to another object) because TextView handles its own key presses.
> 
> 
> If the focused view didn't want this event, this method is called.
<span style="font-family: 'courier new', courier, monospace;">标记部分的文字翻译的意思是：当用户按下一个按键的时候调用，但是前提是这个事件没有被其他的任何 views 监听并处理。</span>

<span style="font-family: 'courier new', courier, monospace;">因为在 Cocos2dx 中的 GLSurfaceView 实现了 keyDown() 方法，处理了事件，所以我们的监听事件获取不到事件的返回值。</span>

<span style="font-family: 'courier new', courier, monospace;">如何让我们的监听可以获取到事件呢？很简单，只需要在 GLSurfaceView 的 keyDown() 方法中，在监听到KeyEvent.KEYCODE_BACK 时，不作处理即可(return false).</span>

<span style="font-family: 'courier new', courier, monospace;">改为如下代码 :</span>
<pre class="font:courier-new font-size:10 line-height:13 toolbar:2 plain:false lang:default decode:true">@Override
public boolean onKeyDown(final int pKeyCode, final KeyEvent pKeyEvent) {
    switch (pKeyCode) {
        case KeyEvent.KEYCODE_BACK:
            Cocos2dxVideoHelper.mVideoHandler.sendEmptyMessage(Cocos2dxVideoHelper.KeyEventBack);
            return false;
         ....// 其他省略
        default:
            return super.onKeyDown(pKeyCode, pKeyEvent);
    }
}</pre>
<span style="font-family: 'courier new', courier, monospace;">这样之后，在 Cocos2dx 下的 AppActivity 中就可以监听到返回键了，重写 keyDown() 方法。</span>
<pre class="toolbar:2 plain:false lang:default decode:true ">private long mkeyTime = 0;
/**
 * 监听Back键按下事件
 * 注意:
 * 返回值表示:是否能完全处理该事件
 * 在此处返回false,所以会继续传播该事件.
 * 在具体项目中此处的返回值视情况而定.
 */
@Override
public boolean onKeyDown(int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_BACK) {
        if ((System.currentTimeMillis() - mkeyTime) &gt; 2000) {
            mkeyTime = System.currentTimeMillis();
            Toast.makeText(this, "再按一次确认退出", Toast.LENGTH_LONG).show();
        } else {
            finish();
        }
        return false;
    } else {
        return super.onKeyDown(keyCode, event);
    }
}</pre>

<p> 就是这样。</p>
  <!--more-->]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> cocos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android app内接入cocos 2dx-js 所遇问题]]></title>
      <url>/2017/04/26/Android-app%E5%86%85%E6%8E%A5%E5%85%A5cocos-2dx-js-%E6%89%80%E9%81%87%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>因项目原因，需要在应用内接入cocos2dx-js写的游戏，此前从未接触过此类需求，也不会js，特开此文，记录自己遇到的问题。（长久更新）</p>
<p>1. 使用cocos Creator 编译android 项目报错</p>
<a id="more"></a>
<p>The “android” command is deprecated.<br>For manual SDK, AVD, and project management, please use Android Studio.<br>For command-line tools, use tools/bin/sdkmanager and tools/bin/avdmanager<br>Invalid or unsupported command “update project -t android-22 -p /Users/XXXX/Documents/XXXX/build/jsb-link/frameworks/runtime-src/proj.android-studio/app”<br>Supported commands are:<br>android list target<br>android list avd<br>android list device<br>android create avd<br>android move avd<br>android delete avd<br>android list sdk<br>android update sdk<br>Error running command, return code: 2.</p>
<p>原因：是因为 sdk/tools的版本过高导致的，需要使用低版本的tools覆盖即可</p>
<p>2. 在使用第三方封装好的框架时，如果框架内加载了其他第三方库，要注意里面库的版本，因为可能库的版本太低，导致没有新版本的方法从而报错。情况：在应用内跳转cocos2dx的游戏界面时，一直报错<br>java.lang.NoSuchMethodError: No virtual method newWebSocket<br>(Lokhttp3/Request;Lokhttp3/WebSocketListener;)<br>Lokhttp3/WebSocket; in class Lokhttp3/OkHttpClient; or its super classes (declaration of ‘okhttp3.OkHttpClient’ appears in /data/app/com.quangames.a.paiju-1/split_lib_dependencies_apk.apk:classes22.dex)</p>
<p>是因为我使用的网络框架时封装好的OKGO,而OKGO中的OKHttp的版本是使用的3.4.1版，而 cocos2dx中封装的网络类需要使用3.5.0版本，版本过低导致方法不存在。</p>
<p>3. 在进入cocos2dx-js的游戏界面后，点击游戏界面中的返回键，会导致app进程被杀死。</p>
<p>// 游戏退出时，所调用的js代码<br>PaiJuAppClient.prototype.jsbEnd = function(){<br>if(DeviceUtils.isIOS()){<br>cc.director.stopAnimation();<br>jsb.reflection.callStaticMethod(“TGGameStaticController”,popVC”);<br>} else {<br>cc.director.end(); // android 调用方法<br>}<br>};<br>起初以为是 cc.director.end(); 导致应用被杀死，后改为使用反射调用本地activity 的方法</p>
<p>jsb.reflection.callStaticMethod(“../GameActivity”, “stopGameControl”,”()V”);<br>但是app还是会被杀死，后经过google搜索，发现是由于点击退出，会调用Cocos2dxHelper中的terminateProces() ，导致进程被杀死，注释掉此行代码即可。<br>然后点击退出就会反射调用本地自己写的方法</p>
<p>public static void terminateProcess() {<br>// android.os.Process.killProcess(android.os.Process.myPid());<br>}<br><!--more--></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> cocos </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
